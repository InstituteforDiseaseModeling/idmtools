# This workflows will upload a Python Package using Twine when a release is created

name: "Staging: idmtools-platform-container"

on:
  push:
    branches:
      # only run this on
      - dev
      - 'release**'
    paths:
      - 'idmtools_core/**'
      - 'idmtools_platform_container/**'
      - 'idmtools_platform_general/**'
  workflow_dispatch:

jobs:
  deploy-container-staging:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'Bump version: ')"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine bump2version coloredlogs idm-buildtools natsort --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple
          git config --global user.name "IDM Tools"
          git config --global user.name "idmtools@idmod.org"
      - uses: azure/docker-login@v1
        with:
          login-server: idm-docker-staging.packages.idmod.org
          username: ${{ secrets.PYPI_STAGING_USERNAME }}
          password: ${{ secrets.PYPI_STAGING_PASSWORD }}
      - uses: azure/docker-login@v1
        with:
          login-server: docker-staging.packages.idmod.org
          username: ${{ secrets.PYPI_STAGING_USERNAME }}
          password: ${{ secrets.PYPI_STAGING_PASSWORD }}
      - uses: azure/docker-login@v1
        with:
          login-server: docker-production.packages.idmod.org
          username: ${{ secrets.PYPI_STAGING_USERNAME }}
          password: ${{ secrets.PYPI_STAGING_PASSWORD }}
      - uses: actions/checkout@v3
      - name: Build and publish
        working-directory: idmtools_platform_container
        env:
          TWINE_REPOSITORY_URL: https://packages.idmod.org/api/pypi/idm-pypi-staging/
          TWINE_USERNAME: ${{ secrets.PYPI_STAGING_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_STAGING_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          # twine upload dist/*
      - name: Check if files has changed
        working-directory: idmtools_platform_container
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            echo "Previous commit exists"
            file1_changed=$(git diff --name-only HEAD^ HEAD | grep -c 'docker_image/Dockerfile')
            file2_changed=$(git diff --name-only HEAD^ HEAD | grep -c 'docker_image/requirements.txt')
          else
            echo "No previous commit"
            file1_changed=$(git diff --name-only HEAD | grep -c 'docker_image/Dockerfile')
            file2_changed=$(git diff --name-only HEAD | grep -c 'docker_image/requirements.txt')
          fi
          if [ "$file1_changed" -gt 0 ] && [ "$file2_changed" -gt 0 ]; then
            echo "files_changed=true" >> $GITHUB_ENV
          else
            echo "files_changed=false" >> $GITHUB_ENV
          fi
      - name: Build container docker image
        working-directory: idmtools_platform_container/docker_image
        env:
          PYPI_STAGING_USERNAME: ${{ secrets.PYPI_STAGING_USERNAME }}
          PYPI_STAGING_PASSWORD: ${{ secrets.PYPI_STAGING_PASSWORD }}
        if: env.files_changed == 'true'
        run: |
          python build_docker_image.py --username ${{ secrets.PYPI_STAGING_USERNAME }} --password ${{ secrets.PYPI_STAGING_PASSWORD }}
          # python push_docker_image.py --username ${{ env.PYPI_STAGING_USERNAME }} --password ${{ env.PYPI_STAGING_PASSWORD }}
