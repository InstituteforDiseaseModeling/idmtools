# install staging packages and run smoke test
# trigger by push or pull_request with commit message: "Run ubuntu smoke test!"

name: "run-smoke-pip-stage"
on: [push, pull_request]

jobs:
  run-smoke-pip-stage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9, 3.7, 3.8]
    env:
      PYPI_STAGING_USERNAME: ${{ secrets.PYPI_STAGING_USERNAME }}
      PYPI_STAGING_PASSWORD: ${{ secrets.PYPI_STAGING_PASSWORD }}
    if: "contains(github.event.head_commit.message, 'run-smoke-pip-stage!')"
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: ${{ matrix.os }} Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install Python dependencies
        run: |
          pip install idm-buildtools flake8 wheel pygit2 matplotlib sqlalchemy --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple
      - name: download idmtools packages from staging jfrog
        run: |
          pip install idmtools[full] --index-url=https://${{ env.PYPI_STAGING_USERNAME }}:${{ secrets.PYPI_STAGING_PASSWORD }}@packages.idmod.org/api/pypi/pypi-staging/simple
          pip install idmtools-test --index-url=https://${{ env.PYPI_STAGING_USERNAME }}:${{ secrets.PYPI_STAGING_PASSWORD }}@packages.idmod.org/api/pypi/pypi-staging/simple
          pip install idmtools[test] --index-url=https://${{ env.PYPI_STAGING_USERNAME }}:${{ secrets.PYPI_STAGING_PASSWORD }}@packages.idmod.org/api/pypi/pypi-staging/simple
      - name: login to comps2
        run: |
          python dev_scripts/create_auth_token_args.py --username "${{ secrets.COMPS_USER }}"
        env:
          COMPS_PASS: ${{ secrets.COMPS_PASSWORD }}
      - name: login to docker staging
        run: |
          echo '${{ env.PYPI_STAGING_PASSWORD }}' | docker login idm-docker-staging.packages.idmod.org --username ${{ env.PYPI_STAGING_USERNAME }} --password-stdin
      - name: run idmtools_cli tests
        run: |
          cd idmtools_cli
          PARALLEL_TEST_COUNT=2 make test-smoke
      - name: Upload idmtools_cli smoke test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_cli_test_results
          path: idmtools_cli/tests/reports/
      - name: run idmtools_core smoke tests
        run: |
          cd idmtools_core
          PARALLEL_TEST_COUNT=2 make test-smoke
      - name: Upload idmtools_core smoke test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_core_test_results
          path: idmtools_core/tests/reports/
      - name: run idmtools_models smoke tests
        run: |
          cd idmtools_models
          PARALLEL_TEST_COUNT=2 make test-smoke
      - name: Upload idmtools_models smoke test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_models_test_results
          path: idmtools_models/tests/reports/
      - name: run idmtools_platform_comps smoke tests
        run: |
          cd idmtools_platform_comps
          PARALLEL_TEST_COUNT=2 make test-smoke
      - name: Upload idmtools_platform_comps smoke test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_platform_comps_test_results
          path: idmtools_platform_comps/tests/reports/
      - name: run idmtools_platform_local smoke tests
        run: |
          cd idmtools_platform_local
          make test-smoke
      - name: Upload idmtools_platform_local smoke test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_platform_local_test_results
          path: idmtools_platform_local/tests/reports/