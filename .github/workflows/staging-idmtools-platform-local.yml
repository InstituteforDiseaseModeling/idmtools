# This workflows will upload a Python Package using Twine when a release is created

name: Upload idmtools-platform-local to Staging

on:
  push:
    branches:
      # only run this on
      - dev
      - 561-nightly-builds
    paths:
      - 'idmtools_platform_local/**'

jobs:
  build-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # build the UI First
      - name: Install NPM Packages
        uses: bahmutov/npm-install@1.4.0
        with:
          working-directory: idmtools_platform_local/idmtools_webui
      - name: Build UI
        run: react-scripts build
        working-directory: idmtools_platform_local/idmtools_webui
      # Now that the UI has been built, remove existing UI
      - name: Removing existing UI
        run: rm -rf idmtools_platform_local/idmtools_platform_local/internals/ui/static/*
      - name: Copying new UI
        run: cp -r idmtools_platform_local/idmtools_webui/build/* idmtools_platform_local/idmtools_platform_local/internals/ui/static/
      # Now create our python package
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        working-directory: idmtools_platform_local
        env:
          TWINE_REPOSITORY_URL: https://packages.idmod.org/api/pypi/idm-pypi-staging/
          TWINE_USERNAME: ${{ secrets.PYPI_STAGING_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_STAGING_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
