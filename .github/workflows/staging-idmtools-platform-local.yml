# This workflows will upload a Python Package using Twine when a release is created

name: "Staging: idmtools-platform-local"

on:
  push:
    branches:
      # only run this on
      - dev
    paths:
      - 'idmtools_core/**'
      - 'idmtools_platform_local/**'

jobs:
  deploy-local-staging:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'Bump version: ')"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine bump2version docker py-make coloredlogs
          git config --global user.name "IDM Tools"
          git config --global user.email "idmtools@idmod.org"
      - uses: azure/docker-login@v1
        with:
          login-server: idm-docker-staging.packages.idmod.org
          username: ${{ secrets.PYPI_STAGING_USERNAME }}
          password: ${{ secrets.PYPI_STAGING_PASSWORD }}
      - uses: actions/checkout@v2
      - name: Use backup yarn
        working-directory: idmtools_platform_local/idmtools_webui
        run: |
          (test ! -f yarn.lock && cp yarn.lock.bak yarn.lock) || echo yarn.lock exists
      # build the UI First
      - name: Install NPM Packages
        uses: bahmutov/npm-install@v1.4.0
        with:
          working-directory: idmtools_platform_local/idmtools_webui
      - name: Build UI
        run: npm run build
        working-directory: idmtools_platform_local/idmtools_webui
      # Now that the UI has been built, remove existing UI
      - name: Removing existing UI
        run: rm -rf idmtools_platform_local/idmtools_platform_local/internals/ui/static
      - name: Copying new UI
        run: cp -r idmtools_platform_local/idmtools_webui/build idmtools_platform_local/idmtools_platform_local/internals/ui/static
      - name: Build and publish
        working-directory: idmtools_platform_local
        env:
          TWINE_REPOSITORY_URL: https://packages.idmod.org/api/pypi/idm-pypi-staging/
          TWINE_USERNAME: ${{ secrets.PYPI_STAGING_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_STAGING_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
      - name: Build and push docker image
        working-directory: idmtools_platform_local
        run: |
          make docker-only
          python push_docker_image.py
