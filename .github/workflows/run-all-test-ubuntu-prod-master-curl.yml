# This workflows will download idmtools nightly packages from production artifactory then run tests with curl command
#
# curl command from your cmd:
# curl -XPOST -u "username:githubPAT" -H "Accept: application/vnd.github.everest-preview+json" \
# -H "Content-Type: application/json" \
# --data "{\"event_type\": \"test_master_prod\"}" \
#  https://api.github.com/repos/InstituteforDiseaseModeling/idmtools/dispatches
#
# Note, this test will checkout 'master' branch

name: "run-all-test-ubuntu-prod-master-curl"
on:
  repository_dispatch:
    # Manually trigger with above curl or Postman POST
    types: [test_master_prod]

jobs:
  run-release-build-test-curl:
    if: github.repository == 'InstituteforDiseaseModeling/idmtools'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: ${{ matrix.os }} Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install Python dependencies
        run: |
          pip install idm-buildtools flake8 wheel --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple
      - name: Install dataclass
        if: ${{ matrix.python-version }} == 3.6
        run: |
          pip install dataclasses
      - name: download idmtools packages from production jfrog
        run: |
          pip install idmtools[full] --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple
          pip install idmtools-test --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple
          pip install idmtools[test] --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple
      - name: login to comps2
        run: |
          python dev_scripts/create_auth_token_args.py --username $COMPS_USER --password $COMPS_PASSWORD
        env:
          COMPS_USER: ${{ secrets.COMPS_USER }}
          COMPS_PASSWORD: ${{ secrets.COMPS_PASSWORD }}
      - name: run idmtools_cli tests
        run: |
          cd idmtools_cli
          make test-all
      - name: Upload idmtools_cli all test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_cli_test_results
          path: idmtools_cli/tests/reports/
      - name: run idmtools_core tests
        run: |
          cd idmtools_core
          make test-all
      - name: Upload idmtools_core all test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_core_test_results
          path: idmtools_core/tests/reports/
      - name: run idmtools_models tests
        run: |
          cd idmtools_models
          make test-all
      - name: Upload idmtools_models all test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_models_test_results
          path: idmtools_models/tests/results/
      - name: run idmtools_platform_comps tests
        run: |
          cd idmtools_platform_comps
          make test-all
      - name: Upload idmtools_platform_comps test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_platform_comps_test_results
          path: idmtools_platform_comps/tests/results/
      - name: run idmtools_platform_local tests
        run: |
          cd idmtools_platform_local
          make test-all
      - name: Upload idmtools_platform_local all test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_platform_local_test_results
          path: idmtools_platform_local/tests/results/