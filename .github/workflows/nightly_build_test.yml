# This workflows will download idmtools nightly packages from staging artifactory then run tests with curl command
#
# curl command from your cmd:
# curl -XPOST -u "username:githubPAT" -H "Accept: application/vnd.github.everest-preview+json" \
# -H "Content-Type: application/json" \
# --data "{\"event_type\": \"test_nightly_build\"}" \
#  https://api.github.com/repos/InstituteforDiseaseModeling/idmtools/dispatches
#
# Note, this test will checkout 'dev' branch

name: "Nightly build test"

on:
  repository_dispatch:
    # Manually trigger with curl or Postman POST
    types: [test_nightly_build]

jobs:
  nightly-build-test:
    if: github.repository == 'InstituteforDiseaseModeling/idmtools'
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: dev
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: download idmtools packages from staging jfrog
        env:
          bamboo_UserArtifactory: ${{ secrets.PYPI_STAGING_USERNAME }}
          bamboo_PasswordArtifactory: ${{ secrets.PYPI_STAGING_PASSWORD }}
        run: |
          pip install idmtools[full] --index-url=https://$bamboo_UserArtifactory:$bamboo_PasswordArtifactory@packages.idmod.org/api/pypi/pypi-staging/simple
          pip install idmtools-test --index-url=https://$bamboo_UserArtifactory:$bamboo_PasswordArtifactory@packages.idmod.org/api/pypi/pypi-staging/simple
      - name: login to comps2
        run: |
            python dev_scripts/create_auth_token_args.py --username $COMPS_USER --password $COMPS_PASSWORD
        env:
          COMPS_USER: ${{ secrets.COMPS_USER }}
          COMPS_PASSWORD: ${{ secrets.COMPS_PASSWORD }}
      - name: run idmtools_cli tests
        run: |
            cd idmtools_cli/tests
            py.test --durations=3 -v --junitxml=test_results.xml
      - name: Upload idmtools_cli test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_cli_test_results
          path: idmtools_cli/tests/test_results.xml
      - name: run idmtools_core tests
        run: |
            cd idmtools_core/tests
            py.test --durations=3 -v --junitxml=test_results.xml
      - name: Upload idmtools_core test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_core_test_results
          path: idmtools_core/tests/test_results.xml
      - name: run idmtools_models tests
        run: |
            cd idmtools_models/tests
            py.test --durations=3 -v --junitxml=test_results.xml
      - name: Upload idmtools_models test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_models_test_results
          path: idmtools_models/tests/test_results.xml
      - name: run idmtools_platform_comps tests
        run: |
            cd idmtools_platform_comps/tests
            py.test --durations=3 -v --junitxml=test_results.xml
      - name: Upload idmtools_platform_comps test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_platform_comps_test_results
          path: idmtools_platform_comps/tests/test_results.xml
      - name: run idmtools_platform_local tests
        run: |
            cd idmtools_platform_local/tests
            py.test --durations=3 -v --junitxml=test_results.xml
      - name: Upload idmtools_platform_local test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: idmtools_platform_local_test_results
          path: idmtools_platform_local/tests/test_results.xml