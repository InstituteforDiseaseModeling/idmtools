# dev install and run all test
# trigger by clicking button "Run Workflow".

name: "run_dev_install_all_tests"
on:
  workflow_dispatch:
    inputs:
      all_tests:
        description: "All tests"
        required: false
        default: 'true'
      container_test:
        description: "Container Platform Test Only"
        required: false
        default: 'false'
      comps_test:
        description: "Comps Platform Test Only"
        required: false
        default: 'false'
      general_test:
        description: "General Platform Test Only"
        required: false
        default: 'false'
      slurm_test:
        description: "Slurm Platform Test Only"
        required: false
        default: 'false'

jobs:
  run-setup-dev-all-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: ['3.12']
    env:
      PYPI_STAGING_USERNAME: ${{ secrets.PYPI_STAGING_USERNAME }}
      PYPI_STAGING_PASSWORD: ${{ secrets.PYPI_STAGING_PASSWORD }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: ${{ matrix.os }} Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
      - name: Install Python dependencies
        run: |
          pip install idm-buildtools wheel pygit2 --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple

      - name: install idmtools
        run: |
          make setup-dev-no-docker
      - name: login to comps2

        run: |
          python dev_scripts/create_auth_token_args.py --username "${{ secrets.COMPS_USER }}"
        env:
          COMPS_PASS: ${{ secrets.COMPS_PASSWORD }}
      - name: login to docker staging
        run: |
          echo '${{ env.PYPI_STAGING_PASSWORD }}' | docker login idm-docker-staging.packages.idmod.org --username ${{ env.PYPI_STAGING_USERNAME }} --password-stdin
          echo '${{ env.PYPI_STAGING_PASSWORD }}' | docker login docker-staging.packages.idmod.org --username ${{ env.PYPI_STAGING_USERNAME }} --password-stdin
      - name: run idmtools_cli tests
        if: ${{ github.event.inputs.all_tests == 'true' || github.event.inputs.general_test == 'true' || github.event.inputs.slurm_test == 'true' || github.event.inputs.comps_test == 'true'}}
        run: |
          cd idmtools_cli
          PARALLEL_TEST_COUNT=2 make test-all
      - name: Upload idmtools_cli all test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: idmtools_cli_test_results
          path: idmtools_cli/tests/reports/
      - name: run idmtools_core tests
        if: ${{ github.event.inputs.all_tests == 'true' || github.event.inputs.general_test == 'true' || github.event.inputs.slurm_test == 'true' || github.event.inputs.comps_test == 'true'}}
        run: |
          cd idmtools_core
          PARALLEL_TEST_COUNT=2 make test-all
      - name: Upload idmtools_core all test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: idmtools_core_test_results
          path: idmtools_core/tests/reports/
      - name: run idmtools_models tests
        if: ${{ github.event.inputs.all_tests == 'true' || github.event.inputs.general_test == 'true' || github.event.inputs.slurm_test == 'true' || github.event.inputs.comps_test == 'true'}}
        run: |
          cd idmtools_models
          PARALLEL_TEST_COUNT=2 make test-all
      - name: Upload idmtools_models all test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: idmtools_models_test_results
          path: idmtools_models/tests/reports/
      - name: run idmtools_platform_general tests
        if: ${{ github.event.inputs.all_tests == 'true' || github.event.inputs.general_test == 'true' }}
        run: |
            cd idmtools_platform_general
            make test-all
      - name: Upload idmtools_platform_general all test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: idmtools_platform_general_test_results
          path: idmtools_platform_general/tests/reports/
      - name: run idmtools_platform_slurm tests
        if: ${{ github.event.inputs.all_tests == 'true' || github.event.inputs.slurm_test == 'true' }}
        run: |
            cd idmtools_platform_slurm
            make test-all
      - name: Upload idmtools_platform_slurm all test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: idmtools_platform_slurm_test_results
          path: idmtools_platform_slurm/tests/reports/
      - name: run idmtools_platform_container tests
        if: ${{ github.event.inputs.all_tests == 'true' || github.event.inputs.container_test == 'true' }}
        run: |
            cd idmtools_platform_container
            make test-all
      - name: Upload idmtools_platform_container all test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: idmtools_platform_container_test_results
          path: idmtools_platform_container/tests/reports/
      - name: run idmtools_platform_comps tests
        if: ${{ github.event.inputs.all_tests == 'true' || github.event.inputs.comps_test == 'true' }}
        run: |
          cd idmtools_platform_comps
          PARALLEL_TEST_COUNT=2 make test-all
      - name: Upload idmtools_platform_comps test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: idmtools_platform_comps_test_results
          path: idmtools_platform_comps/tests/reports/

