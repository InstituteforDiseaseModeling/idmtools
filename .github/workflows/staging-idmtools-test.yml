# This workflows will upload a Python Package using Twine when a release is created

name: "Staging: idmtools-test"

on:
  push:
    branches:
      # only run this on
      - dev
    paths:
      - 'idmtools_test/**'

jobs:
  deploy-test-staging:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'Bump version: ')"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine bump2version
          git config --global user.name "IDM Tools"
          git config --global user.name "idmtools@idmod.org"
      - uses: actions/checkout@v2
      - name: Bump build
        working-directory: idmtools_test
        run: |
          bump2version build --commit --allow-dirty
          git pull
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch:  ${{ github.ref }}
          github_token: ${{ secrets.IDMTOOLS_TOKEN }}
      - name: Build and publish
        working-directory: idmtools_test
        env:
          TWINE_REPOSITORY_URL: https://packages.idmod.org/api/pypi/idm-pypi-staging/
          TWINE_USERNAME: ${{ secrets.PYPI_STAGING_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_STAGING_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
