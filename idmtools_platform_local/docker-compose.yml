# We have to use version 2 formatting of docker-compose to allow use to limit resource usage
version: "2.3"
services:
  redis:
    image: redis:5.0.4-alpine
    volumes:
      - ../data/redis-data:/data
    ports:
      - 6379:6379
    mem_limit: 128m
    mem_reservation: 64m
    # allow passing uid to compose on Unix
    # run like so CURRENT_UID=$(id -u):$(id -g) docker-compose up -d
    user: "${CURRENT_UID:-999:999}"
  postgres:
    image: postgres:11.4
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: idmtools
      POSTGRES_PASSWORD: idmtools
    mem_limit: 64m
    mem_reservation: 32m
    # allow passing uid to compose on Unix
    # run like so CURRENT_UID=$(id -u):$(id -g) docker-compose up -d
    volumes:
      - idmtools_local_postgres:/var/lib/postgresql/data
  workers:
    build:
      context: .
    # We parameterize the build so we can easily specify our desired docker image name
    # ie docker-compose
    image: "${REGISTRY:-idm-docker-staging.packages.idmod.org}/idmtools_local_workers:${service_version:-latest}"
    environment:
      - REDIS_URL=redis://redis:6379
      - "CURRENT_UID=${CURRENT_UID:-1000:1000}"
    ports:
      - 5000:5000
    volumes:
      # You should only link in the library in development
      #- ./idmtools_local:/app/idmtools_local
      - ../data/workers:/data
      - ../:/dev_build
    depends_on:
      - redis
      - postgres
# This can be uncomment development to have a web ui interface for Postgres
#  adminer:
#    image: adminer
#    restart: always
#    ports:
#    - 8080:8080

# this can be uncommented for development to allow gui for Redis at http://localhost:8081
#  redis-commander:
#    container_name: redis-commander
#    hostname: redis-commander
#    image: rediscommander/redis-commander:latest
#    restart: always
#    environment:
#      - REDIS_HOSTS=local:redis:6379
#    ports:
#      - "8081:8081"

# Windows docker and Postgres permissions don't get along
# because of that we need to use a mounted volume
volumes:
  idmtools_local_postgres:

networks:
  default:
    external:
      name: idmtools_network