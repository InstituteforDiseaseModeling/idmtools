<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" file="test_api.py" name="test_api.TestAPI-20190807212229" skipped="0" tests="5"
           time="52.086" timestamp="2019-08-07T21:24:22">
    <testcase classname="test_api.TestAPI" file="test_api.py" line="117" name="test_experiment_filtering" time="33.325"
              timestamp="2019-08-07T21:24:03">
        <system-out>
            <![CDATA[2019-08-07 21:23:50,650 INFO sqlalchemy.engine.base.Engine select version()
2019-08-07 21:23:50,653 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:23:50,674 INFO sqlalchemy.engine.base.Engine select current_schema()
2019-08-07 21:23:50,675 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:23:50,683 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:23:50,684 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:23:50,688 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:23:50,690 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:23:50,697 INFO sqlalchemy.engine.base.Engine show standard_conforming_strings
2019-08-07 21:23:50,700 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:23:50,717 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:50,719 INFO sqlalchemy.engine.base.Engine {'name': 'job_status'}
2019-08-07 21:23:50,730 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:23:50,731 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 21:23:50,738 INFO sqlalchemy.engine.base.Engine CREATE TYPE status AS ENUM ('created', 'in_progress', 'canceled', 'failed', 'done')
2019-08-07 21:23:50,739 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:23:50,749 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:50,755 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:23:50,756 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 21:23:50,769 INFO sqlalchemy.engine.base.Engine 
CREATE TABLE job_status (
	uuid VARCHAR NOT NULL, 
	parent_uuid VARCHAR, 
	status status NOT NULL, 
	data_path VARCHAR NOT NULL, 
	tags JSON, 
	extra_details JSON, 
	created TIMESTAMP WITH TIME ZONE DEFAULT now(), 
	updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (uuid), 
	UNIQUE (uuid)
)


2019-08-07 21:23:50,770 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:23:50,784 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:50,807 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:50,814 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:50,816 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 21:23:50,829 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:50,830 INFO sqlalchemy.engine.base.Engine {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 50, 827626), 'updated': None}
2019-08-07 21:23:50,834 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:50,841 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:50,845 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:50,847 INFO sqlalchemy.engine.base.Engine {'param_1': 'AAAAA'}
2019-08-07 21:23:50,860 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:50,862 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 21:23:50,876 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:50,885 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:50,892 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:50,893 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 21:23:50,905 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:50,907 INFO sqlalchemy.engine.base.Engine {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 50, 904873), 'updated': None}
2019-08-07 21:23:50,912 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:50,921 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:50,926 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:50,927 INFO sqlalchemy.engine.base.Engine {'param_1': 'BBBBB'}
2019-08-07 21:23:50,934 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:50,936 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 21:23:50,940 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:50,956 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:50,964 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:50,966 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 21:23:50,975 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:50,977 INFO sqlalchemy.engine.base.Engine {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 50, 974679), 'updated': None}
2019-08-07 21:23:50,982 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:50,993 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:50,999 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:51,001 INFO sqlalchemy.engine.base.Engine {'param_1': 'CCCCC'}
2019-08-07 21:23:51,009 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:51,010 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 21:23:51,015 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:51,024 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:51,029 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:51,039 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 21:23:51,054 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:51,057 INFO sqlalchemy.engine.base.Engine {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 51, 53549), 'updated': None}
2019-08-07 21:23:51,063 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:51,076 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:51,081 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:51,083 INFO sqlalchemy.engine.base.Engine {'param_1': 'DDDDD'}
2019-08-07 21:23:51,095 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:51,097 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 21:23:51,101 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:51,115 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:51,123 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:51,125 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 21:23:51,136 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:51,138 INFO sqlalchemy.engine.base.Engine {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 51, 132341), 'updated': None}
2019-08-07 21:23:51,142 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:51,153 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:51,159 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:51,163 INFO sqlalchemy.engine.base.Engine {'param_1': 'EEEEE'}
2019-08-07 21:23:51,170 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:51,172 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 21:23:51,183 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:51,196 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:51,202 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:51,204 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 21:23:51,212 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:51,213 INFO sqlalchemy.engine.base.Engine {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 51, 211567), 'updated': None}
2019-08-07 21:23:51,218 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:51,226 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:23:51,230 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:51,232 INFO sqlalchemy.engine.base.Engine {'param_1': 'FFFFF'}
2019-08-07 21:23:51,240 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:51,242 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 21:23:51,246 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:23:51,283 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:51,284 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 21:23:51,300 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 21:23:51,302 INFO sqlalchemy.engine.base.Engine {'tags_1': 'a', 'param_1': 'b'}
2019-08-07 21:23:51,402 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:51,404 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 21:23:51,413 INFO sqlalchemy.engine.base.Engine SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 21:23:51,414 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:23:51,773 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:51,775 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 21:23:51,786 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 21:23:51,787 INFO sqlalchemy.engine.base.Engine {'tags_1': 'a', 'param_1': 'c'}
2019-08-07 21:23:51,828 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:51,829 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 21:23:51,838 INFO sqlalchemy.engine.base.Engine SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 21:23:51,839 INFO sqlalchemy.engine.base.Engine {}

[K]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:23:44 sahara root[1819] INFO Generating grammar tables from /usr/lib/python3.7/lib2to3/Grammar.txt
2019-08-07 21:23:44 sahara root[1819] INFO Generating grammar tables from /usr/lib/python3.7/lib2to3/PatternGrammar.txt
2019-08-07 21:23:45 sahara docker.utils.config[1819] DEBUG Trying paths: ['/home/clinton/.docker/config.json', '/home/clinton/.dockercfg']
2019-08-07 21:23:45 sahara docker.utils.config[1819] DEBUG Found file at path: /home/clinton/.docker/config.json
2019-08-07 21:23:45 sahara docker.auth[1819] DEBUG Found 'auths' section
2019-08-07 21:23:45 sahara docker.auth[1819] DEBUG Found entry (registry='docker.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:23:45 sahara docker.auth[1819] DEBUG Found entry (registry='iazdvfil01.azurecr.io', username='iazdvfil01')
2019-08-07 21:23:45 sahara docker.auth[1819] DEBUG Found entry (registry='idm-docker-production.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:23:45 sahara docker.auth[1819] DEBUG Found entry (registry='idm-docker-staging.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:23:45 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Ensuring postgres is running
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO select version()
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO select current_schema()
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO show standard_conforming_strings
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'name': 'job_status'}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'typname': 'status'}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO CREATE TYPE status AS ENUM ('created', 'in_progress', 'canceled', 'failed', 'done')
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'typname': 'status'}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO 
CREATE TABLE job_status (
	uuid VARCHAR NOT NULL, 
	parent_uuid VARCHAR, 
	status status NOT NULL, 
	data_path VARCHAR NOT NULL, 
	tags JSON, 
	extra_details JSON, 
	created TIMESTAMP WITH TIME ZONE DEFAULT now(), 
	updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (uuid), 
	UNIQUE (uuid)
)


2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 50, 827626), 'updated': None}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'param_1': 'AAAAA'}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 50, 904873), 'updated': None}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'param_1': 'BBBBB'}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 50, 974679), 'updated': None}
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:50 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'param_1': 'CCCCC'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 51, 53549), 'updated': None}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'param_1': 'DDDDD'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 51, 132341), 'updated': None}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'param_1': 'EEEEE'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 23, 51, 211567), 'updated': None}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO BEGIN (implicit)
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'param_1': 'FFFFF'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO COMMIT
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'tags_1': 'a', 'param_1': 'b'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:51 sahara flask.app[1819] ERROR   experiment_id    data_path  ...                           updated progress
0         AAAAA  /data/AAAAA  ...  2019-08-08 04:23:50.848801+00:00       []

[1 rows x 7 columns]
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'tags_1': 'a', 'param_1': 'c'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 21:23:51 sahara sqlalchemy.engine.base.Engine[1819] INFO {}
2019-08-07 21:23:51 sahara flask.app[1819] ERROR Empty DataFrame
Columns: [experiment_id, data_path, tags, extra_details, created, updated, progress]
Index: []
2019-08-07 21:23:51 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Ensuring redis is running
2019-08-07 21:23:52 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Stopping container idmtools_redis
2019-08-07 21:23:52 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Removing container idmtools_redis
2019-08-07 21:23:52 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Ensuring postgres is running
2019-08-07 21:23:52 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Stopping container idmtools_postgres
2019-08-07 21:24:03 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Removing container idmtools_postgres
2019-08-07 21:24:03 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Ensuring worker is running
2019-08-07 21:24:03 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Stopping container idmtools_workers
2019-08-07 21:24:03 sahara idmtools_platform_local.docker.DockerOperations[1819] DEBUG Removing container idmtools_workers
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="54" name="test_fetch_experiments" time="11.650"
              timestamp="2019-08-07T21:24:15">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:24:15 sahara flask.app[1819] ERROR   experiment_id    data_path  ...              updated          progress
0         DDDDD   /data/DDDD  ...  2019-08-08 04:24:14  [{'created': 2}]
1         BBBBB  /data/BBBBB  ...  2019-08-08 04:24:14  [{'created': 1}]
2         AAAAA  /data/AAAAA  ...  2019-08-08 04:24:14                []

[3 rows x 7 columns]
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="73" name="test_fetch_one_experiment_works"
              time="3.928" timestamp="2019-08-07T21:24:19">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:24:19 sahara flask.app[1819] ERROR   experiment_id    data_path  ...              updated progress
0         AAAAA  /data/AAAAA  ...  2019-08-08 04:24:18       []

[1 rows x 7 columns]
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="106" name="test_fetch_one_simulation_works"
              time="1.750" timestamp="2019-08-07T21:24:21">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="83" name="test_fetch_simulations" time="1.433"
              timestamp="2019-08-07T21:24:22">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
</testsuite>
