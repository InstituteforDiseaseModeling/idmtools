<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" file="test_api.py" name="test_api.TestAPI-20190807211648" skipped="0" tests="5"
           time="25.781" timestamp="2019-08-07T21:18:00">
    <testcase classname="test_api.TestAPI" file="test_api.py" line="117" name="test_experiment_filtering" time="23.937"
              timestamp="2019-08-07T21:17:58">
        <system-out>
            <![CDATA[2019-08-07 21:17:41,776 INFO sqlalchemy.engine.base.Engine select version()
2019-08-07 21:17:41,778 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:17:41,798 INFO sqlalchemy.engine.base.Engine select current_schema()
2019-08-07 21:17:41,799 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:17:41,811 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:17:41,813 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:17:41,821 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:17:41,823 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:17:41,830 INFO sqlalchemy.engine.base.Engine show standard_conforming_strings
2019-08-07 21:17:41,832 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:17:41,843 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:41,845 INFO sqlalchemy.engine.base.Engine {'name': 'job_status'}
2019-08-07 21:17:41,853 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:17:41,857 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 21:17:41,891 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:41,902 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:41,904 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 21:17:41,923 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:41,924 INFO sqlalchemy.engine.base.Engine {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 41, 921212), 'updated': None}
2019-08-07 21:17:41,935 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:41,946 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:41,953 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:41,954 INFO sqlalchemy.engine.base.Engine {'param_1': 'AAAAA'}
2019-08-07 21:17:41,971 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:41,973 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 21:17:41,980 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:41,992 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:41,999 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42,004 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 21:17:42,017 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42,020 INFO sqlalchemy.engine.base.Engine {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 16500), 'updated': None}
2019-08-07 21:17:42,029 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,037 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,042 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42,044 INFO sqlalchemy.engine.base.Engine {'param_1': 'BBBBB'}
2019-08-07 21:17:42,052 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42,056 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 21:17:42,062 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,073 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,083 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42,084 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 21:17:42,097 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42,099 INFO sqlalchemy.engine.base.Engine {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 97327), 'updated': None}
2019-08-07 21:17:42,105 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,127 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,134 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42,135 INFO sqlalchemy.engine.base.Engine {'param_1': 'CCCCC'}
2019-08-07 21:17:42,149 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42,151 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 21:17:42,158 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,170 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,179 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42,180 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 21:17:42,194 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42,197 INFO sqlalchemy.engine.base.Engine {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 193590), 'updated': None}
2019-08-07 21:17:42,206 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,216 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,227 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42,229 INFO sqlalchemy.engine.base.Engine {'param_1': 'DDDDD'}
2019-08-07 21:17:42,237 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42,244 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 21:17:42,253 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,266 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,272 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42,275 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 21:17:42,287 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42,288 INFO sqlalchemy.engine.base.Engine {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 282849), 'updated': None}
2019-08-07 21:17:42,298 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,309 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,314 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42,321 INFO sqlalchemy.engine.base.Engine {'param_1': 'EEEEE'}
2019-08-07 21:17:42,329 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42,332 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 21:17:42,341 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,354 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,362 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42,363 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 21:17:42,383 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42,384 INFO sqlalchemy.engine.base.Engine {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 382465), 'updated': None}
2019-08-07 21:17:42,393 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,402 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:17:42,408 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42,414 INFO sqlalchemy.engine.base.Engine {'param_1': 'FFFFF'}
2019-08-07 21:17:42,425 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42,427 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 21:17:42,438 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:17:42,478 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:42,480 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 21:17:42,493 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 21:17:42,495 INFO sqlalchemy.engine.base.Engine {'tags_1': 'a', 'param_1': 'b'}
2019-08-07 21:17:42,584 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:42,585 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 21:17:42,595 INFO sqlalchemy.engine.base.Engine SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 21:17:42,597 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:17:42,972 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:42,973 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 21:17:42,985 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 21:17:42,987 INFO sqlalchemy.engine.base.Engine {'tags_1': 'a', 'param_1': 'c'}
2019-08-07 21:17:43,027 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:43,029 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 21:17:43,037 INFO sqlalchemy.engine.base.Engine SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 21:17:43,039 INFO sqlalchemy.engine.base.Engine {}

[K]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:17:35 sahara root[26785] INFO Generating grammar tables from /usr/lib/python3.7/lib2to3/Grammar.txt
2019-08-07 21:17:35 sahara root[26785] INFO Generating grammar tables from /usr/lib/python3.7/lib2to3/PatternGrammar.txt
2019-08-07 21:17:36 sahara docker.utils.config[26785] DEBUG Trying paths: ['/home/clinton/.docker/config.json', '/home/clinton/.dockercfg']
2019-08-07 21:17:36 sahara docker.utils.config[26785] DEBUG Found file at path: /home/clinton/.docker/config.json
2019-08-07 21:17:36 sahara docker.auth[26785] DEBUG Found 'auths' section
2019-08-07 21:17:36 sahara docker.auth[26785] DEBUG Found entry (registry='docker.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:17:36 sahara docker.auth[26785] DEBUG Found entry (registry='iazdvfil01.azurecr.io', username='iazdvfil01')
2019-08-07 21:17:36 sahara docker.auth[26785] DEBUG Found entry (registry='idm-docker-production.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:17:36 sahara docker.auth[26785] DEBUG Found entry (registry='idm-docker-staging.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:17:36 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring postgres is running
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO select version()
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO select current_schema()
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO show standard_conforming_strings
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {'name': 'job_status'}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {'typname': 'status'}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 41, 921212), 'updated': None}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'AAAAA'}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:41 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 16500), 'updated': None}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'BBBBB'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 97327), 'updated': None}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'CCCCC'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 193590), 'updated': None}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'DDDDD'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 282849), 'updated': None}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'EEEEE'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 17, 42, 382465), 'updated': None}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'FFFFF'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'tags_1': 'a', 'param_1': 'b'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:17:42 sahara flask.app[26785] ERROR   experiment_id    data_path  ...                           updated progress
0         AAAAA  /data/AAAAA  ...  2019-08-08 04:17:41.956281+00:00       []

[1 rows x 7 columns]
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 21:17:42 sahara sqlalchemy.engine.base.Engine[26785] INFO {'tags_1': 'a', 'param_1': 'c'}
2019-08-07 21:17:43 sahara sqlalchemy.engine.base.Engine[26785] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:17:43 sahara sqlalchemy.engine.base.Engine[26785] INFO {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 21:17:43 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 21:17:43 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:17:43 sahara flask.app[26785] ERROR Empty DataFrame
Columns: [experiment_id, data_path, tags, extra_details, created, updated, progress]
Index: []
2019-08-07 21:17:43 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring redis is running
2019-08-07 21:17:43 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_redis
2019-08-07 21:17:43 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_redis
2019-08-07 21:17:43 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring postgres is running
2019-08-07 21:17:44 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_postgres
2019-08-07 21:17:54 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_postgres
2019-08-07 21:17:54 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring worker is running
2019-08-07 21:17:54 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_workers
2019-08-07 21:17:58 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_workers
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="54" name="test_fetch_experiments" time="0.631"
              timestamp="2019-08-07T21:17:59">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:17:59 sahara flask.app[26785] ERROR   experiment_id    data_path  ...              updated          progress
0         DDDDD   /data/DDDD  ...  2019-08-08 04:17:58  [{'created': 2}]
1         BBBBB  /data/BBBBB  ...  2019-08-08 04:17:58  [{'created': 1}]
2         AAAAA  /data/AAAAA  ...  2019-08-08 04:17:58                []

[3 rows x 7 columns]
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="73" name="test_fetch_one_experiment_works"
              time="0.527" timestamp="2019-08-07T21:17:59">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:17:59 sahara flask.app[26785] ERROR   experiment_id    data_path  ...              updated progress
0         AAAAA  /data/AAAAA  ...  2019-08-08 04:17:59       []

[1 rows x 7 columns]
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="106" name="test_fetch_one_simulation_works"
              time="0.292" timestamp="2019-08-07T21:18:00">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="83" name="test_fetch_simulations" time="0.394"
              timestamp="2019-08-07T21:18:00">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
</testsuite>
