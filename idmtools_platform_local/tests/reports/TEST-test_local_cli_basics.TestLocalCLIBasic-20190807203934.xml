<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" file="test_local_cli_basics.py"
           name="test_local_cli_basics.TestLocalCLIBasic-20190807203934" skipped="0" tests="3" time="44.953"
           timestamp="2019-08-07T20:43:37">
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="58"
              name="test_docker" time="44.060" timestamp="2019-08-07T20:43:36">
        <system-out>
            <![CDATA[
[K2019-08-07 20:43:17,162 INFO sqlalchemy.engine.base.Engine select version()
2019-08-07 20:43:17,164 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:43:17,175 INFO sqlalchemy.engine.base.Engine select current_schema()
2019-08-07 20:43:17,177 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:43:17,191 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 20:43:17,193 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:43:17,200 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 20:43:17,202 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:43:17,213 INFO sqlalchemy.engine.base.Engine show standard_conforming_strings
2019-08-07 20:43:17,216 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:43:17,232 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 20:43:17,234 INFO sqlalchemy.engine.base.Engine {'name': 'job_status'}
2019-08-07 20:43:17,245 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 20:43:17,246 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 20:43:17,256 INFO sqlalchemy.engine.base.Engine CREATE TYPE status AS ENUM ('created', 'in_progress', 'canceled', 'failed', 'done')
2019-08-07 20:43:17,257 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:43:17,267 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,278 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 20:43:17,280 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 20:43:17,293 INFO sqlalchemy.engine.base.Engine 
CREATE TABLE job_status (
	uuid VARCHAR NOT NULL, 
	parent_uuid VARCHAR, 
	status status NOT NULL, 
	data_path VARCHAR NOT NULL, 
	tags JSON, 
	extra_details JSON, 
	created TIMESTAMP WITH TIME ZONE DEFAULT now(), 
	updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (uuid), 
	UNIQUE (uuid)
)


2019-08-07 20:43:17,294 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:43:17,308 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,330 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,337 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17,339 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 20:43:17,358 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17,359 INFO sqlalchemy.engine.base.Engine {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 356107), 'updated': None}
2019-08-07 20:43:17,365 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,374 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,384 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17,385 INFO sqlalchemy.engine.base.Engine {'param_1': 'AAAAA'}
2019-08-07 20:43:17,396 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17,397 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 20:43:17,406 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,415 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,421 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17,424 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 20:43:17,437 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17,439 INFO sqlalchemy.engine.base.Engine {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 436536), 'updated': None}
2019-08-07 20:43:17,447 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,461 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,467 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17,469 INFO sqlalchemy.engine.base.Engine {'param_1': 'BBBBB'}
2019-08-07 20:43:17,483 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17,485 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 20:43:17,492 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,504 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,513 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17,515 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 20:43:17,527 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17,530 INFO sqlalchemy.engine.base.Engine {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 526624), 'updated': None}
2019-08-07 20:43:17,544 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,557 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,561 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17,563 INFO sqlalchemy.engine.base.Engine {'param_1': 'CCCCC'}
2019-08-07 20:43:17,580 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17,582 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 20:43:17,588 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,601 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,610 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17,612 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 20:43:17,624 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17,626 INFO sqlalchemy.engine.base.Engine {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 623812), 'updated': None}
2019-08-07 20:43:17,641 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,653 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,658 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17,660 INFO sqlalchemy.engine.base.Engine {'param_1': 'DDDDD'}
2019-08-07 20:43:17,678 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17,681 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 20:43:17,687 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,700 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,706 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17,709 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 20:43:17,722 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17,724 INFO sqlalchemy.engine.base.Engine {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 717381), 'updated': None}
2019-08-07 20:43:17,735 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,744 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,750 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17,754 INFO sqlalchemy.engine.base.Engine {'param_1': 'EEEEE'}
2019-08-07 20:43:17,761 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17,763 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 20:43:17,769 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,792 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,798 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17,799 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 20:43:17,808 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17,813 INFO sqlalchemy.engine.base.Engine {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 807363), 'updated': None}
2019-08-07 20:43:17,821 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:43:17,829 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:43:17,835 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17,838 INFO sqlalchemy.engine.base.Engine {'param_1': 'FFFFF'}
2019-08-07 20:43:17,847 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17,849 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 20:43:17,855 INFO sqlalchemy.engine.base.Engine COMMIT

]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 20:42:52 sahara docker.utils.config[5365] DEBUG Trying paths: ['/home/clinton/.docker/config.json', '/home/clinton/.dockercfg']
2019-08-07 20:42:52 sahara docker.utils.config[5365] DEBUG Found file at path: /home/clinton/.docker/config.json
2019-08-07 20:42:52 sahara docker.auth[5365] DEBUG Found 'auths' section
2019-08-07 20:42:52 sahara docker.auth[5365] DEBUG Found entry (registry='docker.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 20:42:52 sahara docker.auth[5365] DEBUG Found entry (registry='iazdvfil01.azurecr.io', username='iazdvfil01')
2019-08-07 20:42:52 sahara docker.auth[5365] DEBUG Found entry (registry='idm-docker-production.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 20:42:52 sahara docker.auth[5365] DEBUG Found entry (registry='idm-docker-staging.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 20:42:52 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring redis is running
2019-08-07 20:42:52 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Stopping container idmtools_redis
2019-08-07 20:42:53 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Removing container idmtools_redis
2019-08-07 20:42:53 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring postgres is running
2019-08-07 20:42:53 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Stopping container idmtools_postgres
2019-08-07 20:43:03 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Removing container idmtools_postgres
2019-08-07 20:43:04 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring worker is running
2019-08-07 20:43:04 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Stopping container idmtools_workers
2019-08-07 20:43:07 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Removing container idmtools_workers
2019-08-07 20:43:08 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring postgres is running
2019-08-07 20:43:08 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Postgres Config: {'name': 'idmtools_postgres', 'image': 'postgres:11.4', 'ports': {5432: 5432}, 'volumes': {'idmtools_local_postgres': {'bind': '/var/lib/postgresql/data', 'mode': 'rw'}}, 'hostname': 'postgres', 'environment': ['POSTGRES_USER=idmtools', 'POSTGRES_PASSWORD=idmtools'], 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '64m', 'mem_reservation': '32m'}
2019-08-07 20:43:08 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Postgres Container Config {'name': 'idmtools_postgres', 'image': 'postgres:11.4', 'ports': {5432: 5432}, 'volumes': {'idmtools_local_postgres': {'bind': '/var/lib/postgresql/data', 'mode': 'rw'}}, 'hostname': 'postgres', 'environment': ['POSTGRES_USER=idmtools', 'POSTGRES_PASSWORD=idmtools'], 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '64m', 'mem_reservation': '32m'}
2019-08-07 20:43:09 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring redis is running
2019-08-07 20:43:09 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Redis Config: {'name': 'idmtools_redis', 'hostname': 'redis', 'image': 'redis:5.0.4-alpine', 'ports': {6379: 6379}, 'volumes': {'/home/clinton/development/work/idmtools/idmtools_platform_local/tests/.local_data/redis-data': {'bind': '/data', 'mode': 'rw'}}, 'user': '1000:1000', 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '128m', 'mem_reservation': '64m'}
2019-08-07 20:43:09 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Redis Container Config {'name': 'idmtools_redis', 'hostname': 'redis', 'image': 'redis:5.0.4-alpine', 'ports': {6379: 6379}, 'volumes': {'/home/clinton/development/work/idmtools/idmtools_platform_local/tests/.local_data/redis-data': {'bind': '/data', 'mode': 'rw'}}, 'user': '1000:1000', 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '128m', 'mem_reservation': '64m'}
2019-08-07 20:43:13 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring worker is running
2019-08-07 20:43:13 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Creating working container
2019-08-07 20:43:13 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Worker Config: {'name': 'idmtools_workers', 'hostname': 'idmtools', 'image': 'idm-docker-staging.packages.idmod.org/idmtools_local_workers:latest', 'ports': {5000: 5000}, 'links': {'idmtools_redis': 'redis', 'idmtools_postgres': 'postgres'}, 'volumes': {'/home/clinton/development/work/idmtools/idmtools_platform_local/tests/.local_data/workers': {'bind': '/data', 'mode': 'rw'}, '/var/run/docker.sock': {'bind': '/var/run/docker.sock', 'mode': 'rw'}}, 'runtime': 'runc', 'environment': ['REDIS_URL=redis://redis:6379', 'CURRENT_UID=1000:1000'], 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '128m', 'mem_reservation': '64m'}
2019-08-07 20:43:13 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Worker Container Config {'name': 'idmtools_workers', 'hostname': 'idmtools', 'image': 'idm-docker-staging.packages.idmod.org/idmtools_local_workers:latest', 'ports': {5000: 5000}, 'links': {'idmtools_redis': 'redis', 'idmtools_postgres': 'postgres'}, 'volumes': {'/home/clinton/development/work/idmtools/idmtools_platform_local/tests/.local_data/workers': {'bind': '/data', 'mode': 'rw'}, '/var/run/docker.sock': {'bind': '/var/run/docker.sock', 'mode': 'rw'}}, 'runtime': 'runc', 'environment': ['REDIS_URL=redis://redis:6379', 'CURRENT_UID=1000:1000'], 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '128m', 'mem_reservation': '64m'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO select version()
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO select current_schema()
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO show standard_conforming_strings
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'name': 'job_status'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'typname': 'status'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO CREATE TYPE status AS ENUM ('created', 'in_progress', 'canceled', 'failed', 'done')
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'typname': 'status'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO 
CREATE TABLE job_status (
	uuid VARCHAR NOT NULL, 
	parent_uuid VARCHAR, 
	status status NOT NULL, 
	data_path VARCHAR NOT NULL, 
	tags JSON, 
	extra_details JSON, 
	created TIMESTAMP WITH TIME ZONE DEFAULT now(), 
	updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (uuid), 
	UNIQUE (uuid)
)


2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 356107), 'updated': None}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'param_1': 'AAAAA'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 436536), 'updated': None}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'param_1': 'BBBBB'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 526624), 'updated': None}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'param_1': 'CCCCC'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 623812), 'updated': None}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'param_1': 'DDDDD'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 717381), 'updated': None}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'param_1': 'EEEEE'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 43, 17, 807363), 'updated': None}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO BEGIN (implicit)
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'param_1': 'FFFFF'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 20:43:17 sahara sqlalchemy.engine.base.Engine[5365] INFO COMMIT
2019-08-07 20:43:19 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
2019-08-07 20:43:19 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
2019-08-07 20:43:19 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
2019-08-07 20:43:19 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
2019-08-07 20:43:20 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
2019-08-07 20:43:20 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
2019-08-07 20:43:20 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring redis is running
2019-08-07 20:43:20 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Stopping container idmtools_redis
2019-08-07 20:43:21 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Removing container idmtools_redis
2019-08-07 20:43:21 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring postgres is running
2019-08-07 20:43:21 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Stopping container idmtools_postgres
2019-08-07 20:43:31 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Removing container idmtools_postgres
2019-08-07 20:43:31 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Ensuring worker is running
2019-08-07 20:43:32 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Stopping container idmtools_workers
2019-08-07 20:43:35 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Removing container idmtools_workers
2019-08-07 20:43:36 sahara idmtools_platform_local.docker.DockerOperations[5365] DEBUG Creating network idmtools
]]>        </system-err>
    </testcase>
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="48"
              name="test_load" time="0.417" timestamp="2019-08-07T20:43:36">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 20:43:36 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
2019-08-07 20:43:36 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
]]>        </system-err>
    </testcase>
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="54"
              name="test_status" time="0.476" timestamp="2019-08-07T20:43:37">
        <system-out>
            <![CDATA[<Result SystemExit(-1)>
]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 20:43:37 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
2019-08-07 20:43:37 sahara idmtools.registry.utils[5365] DEBUG Loading {str(plugin)} as {plugin.get_name()}
]]>        </system-err>
    </testcase>
</testsuite>
