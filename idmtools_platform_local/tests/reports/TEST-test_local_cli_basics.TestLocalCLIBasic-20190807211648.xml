<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" file="test_local_cli_basics.py"
           name="test_local_cli_basics.TestLocalCLIBasic-20190807211648" skipped="0" tests="3" time="34.953"
           timestamp="2019-08-07T21:21:06">
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="58"
              name="test_docker" time="34.106" timestamp="2019-08-07T21:21:05">
        <system-out>
            <![CDATA[
[K2019-08-07 21:20:46,449 INFO sqlalchemy.engine.base.Engine select version()
2019-08-07 21:20:46,451 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:20:46,456 INFO sqlalchemy.engine.base.Engine select current_schema()
2019-08-07 21:20:46,459 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:20:46,477 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:20:46,479 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:20:46,488 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:20:46,489 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:20:46,493 INFO sqlalchemy.engine.base.Engine show standard_conforming_strings
2019-08-07 21:20:46,496 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:20:46,516 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:20:46,518 INFO sqlalchemy.engine.base.Engine {'name': 'job_status'}
2019-08-07 21:20:46,530 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:20:46,532 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 21:20:46,546 INFO sqlalchemy.engine.base.Engine CREATE TYPE status AS ENUM ('created', 'in_progress', 'canceled', 'failed', 'done')
2019-08-07 21:20:46,548 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:20:46,551 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,556 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:20:46,558 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 21:20:46,577 INFO sqlalchemy.engine.base.Engine 
CREATE TABLE job_status (
	uuid VARCHAR NOT NULL, 
	parent_uuid VARCHAR, 
	status status NOT NULL, 
	data_path VARCHAR NOT NULL, 
	tags JSON, 
	extra_details JSON, 
	created TIMESTAMP WITH TIME ZONE DEFAULT now(), 
	updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (uuid), 
	UNIQUE (uuid)
)


2019-08-07 21:20:46,579 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 21:20:46,594 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,616 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:46,625 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:46,626 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 21:20:46,639 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:46,641 INFO sqlalchemy.engine.base.Engine {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 46, 638293), 'updated': None}
2019-08-07 21:20:46,647 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,654 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:46,659 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:46,662 INFO sqlalchemy.engine.base.Engine {'param_1': 'AAAAA'}
2019-08-07 21:20:46,677 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:46,678 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 21:20:46,687 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,705 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:46,716 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:46,718 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 21:20:46,734 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:46,735 INFO sqlalchemy.engine.base.Engine {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 46, 733482), 'updated': None}
2019-08-07 21:20:46,744 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,754 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:46,763 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:46,764 INFO sqlalchemy.engine.base.Engine {'param_1': 'BBBBB'}
2019-08-07 21:20:46,775 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:46,777 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 21:20:46,783 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,802 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:46,811 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:46,813 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 21:20:46,832 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:46,833 INFO sqlalchemy.engine.base.Engine {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 46, 831586), 'updated': None}
2019-08-07 21:20:46,844 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,853 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:46,859 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:46,861 INFO sqlalchemy.engine.base.Engine {'param_1': 'CCCCC'}
2019-08-07 21:20:46,877 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:46,879 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 21:20:46,886 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,905 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:46,917 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:46,920 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 21:20:46,937 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:46,939 INFO sqlalchemy.engine.base.Engine {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 46, 937056), 'updated': None}
2019-08-07 21:20:46,944 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:46,959 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:46,969 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:46,971 INFO sqlalchemy.engine.base.Engine {'param_1': 'DDDDD'}
2019-08-07 21:20:46,984 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:46,988 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 21:20:46,996 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:47,012 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:47,021 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:47,023 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 21:20:47,032 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:47,033 INFO sqlalchemy.engine.base.Engine {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 47, 31190), 'updated': None}
2019-08-07 21:20:47,040 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:47,049 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:47,054 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:47,059 INFO sqlalchemy.engine.base.Engine {'param_1': 'EEEEE'}
2019-08-07 21:20:47,067 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:47,069 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 21:20:47,077 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:47,091 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:47,102 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:47,104 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 21:20:47,126 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:47,129 INFO sqlalchemy.engine.base.Engine {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 47, 125807), 'updated': None}
2019-08-07 21:20:47,138 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 21:20:47,148 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 21:20:47,153 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:47,155 INFO sqlalchemy.engine.base.Engine {'param_1': 'FFFFF'}
2019-08-07 21:20:47,165 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:47,174 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 21:20:47,182 INFO sqlalchemy.engine.base.Engine COMMIT

]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:20:31 sahara docker.utils.config[26785] DEBUG Trying paths: ['/home/clinton/.docker/config.json', '/home/clinton/.dockercfg']
2019-08-07 21:20:31 sahara docker.utils.config[26785] DEBUG Found file at path: /home/clinton/.docker/config.json
2019-08-07 21:20:31 sahara docker.auth[26785] DEBUG Found 'auths' section
2019-08-07 21:20:31 sahara docker.auth[26785] DEBUG Found entry (registry='docker.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:20:31 sahara docker.auth[26785] DEBUG Found entry (registry='iazdvfil01.azurecr.io', username='iazdvfil01')
2019-08-07 21:20:31 sahara docker.auth[26785] DEBUG Found entry (registry='idm-docker-production.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:20:31 sahara docker.auth[26785] DEBUG Found entry (registry='idm-docker-staging.packages.idmod.org', username='ccollins@idmod.org')
2019-08-07 21:20:31 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring redis is running
2019-08-07 21:20:31 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_redis
2019-08-07 21:20:32 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_redis
2019-08-07 21:20:32 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring postgres is running
2019-08-07 21:20:32 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_postgres
2019-08-07 21:20:33 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_postgres
2019-08-07 21:20:33 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring worker is running
2019-08-07 21:20:33 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_workers
2019-08-07 21:20:37 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_workers
2019-08-07 21:20:37 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring postgres is running
2019-08-07 21:20:37 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Postgres Config: {'name': 'idmtools_postgres', 'image': 'postgres:11.4', 'ports': {5432: 5432}, 'volumes': {'idmtools_local_postgres': {'bind': '/var/lib/postgresql/data', 'mode': 'rw'}}, 'hostname': 'postgres', 'environment': ['POSTGRES_USER=idmtools', 'POSTGRES_PASSWORD=idmtools'], 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '64m', 'mem_reservation': '32m'}
2019-08-07 21:20:37 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Postgres Container Config {'name': 'idmtools_postgres', 'image': 'postgres:11.4', 'ports': {5432: 5432}, 'volumes': {'idmtools_local_postgres': {'bind': '/var/lib/postgresql/data', 'mode': 'rw'}}, 'hostname': 'postgres', 'environment': ['POSTGRES_USER=idmtools', 'POSTGRES_PASSWORD=idmtools'], 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '64m', 'mem_reservation': '32m'}
2019-08-07 21:20:38 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring redis is running
2019-08-07 21:20:38 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Redis Config: {'name': 'idmtools_redis', 'hostname': 'redis', 'image': 'redis:5.0.4-alpine', 'ports': {6379: 6379}, 'volumes': {'/home/clinton/development/work/idmtools/idmtools_platform_local/tests/.local_data/redis-data': {'bind': '/data', 'mode': 'rw'}}, 'user': '1000:1000', 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '128m', 'mem_reservation': '64m'}
2019-08-07 21:20:38 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Redis Container Config {'name': 'idmtools_redis', 'hostname': 'redis', 'image': 'redis:5.0.4-alpine', 'ports': {6379: 6379}, 'volumes': {'/home/clinton/development/work/idmtools/idmtools_platform_local/tests/.local_data/redis-data': {'bind': '/data', 'mode': 'rw'}}, 'user': '1000:1000', 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '128m', 'mem_reservation': '64m'}
2019-08-07 21:20:42 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring worker is running
2019-08-07 21:20:42 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Creating working container
2019-08-07 21:20:42 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Worker Config: {'name': 'idmtools_workers', 'hostname': 'idmtools', 'image': 'idm-docker-staging.packages.idmod.org/idmtools_local_workers:latest', 'ports': {5000: 5000}, 'links': {'idmtools_redis': 'redis', 'idmtools_postgres': 'postgres'}, 'volumes': {'/home/clinton/development/work/idmtools/idmtools_platform_local/tests/.local_data/workers': {'bind': '/data', 'mode': 'rw'}, '/var/run/docker.sock': {'bind': '/var/run/docker.sock', 'mode': 'rw'}}, 'runtime': 'runc', 'environment': ['REDIS_URL=redis://redis:6379', 'CURRENT_UID=1000:1000'], 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '128m', 'mem_reservation': '64m'}
2019-08-07 21:20:42 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Worker Container Config {'name': 'idmtools_workers', 'hostname': 'idmtools', 'image': 'idm-docker-staging.packages.idmod.org/idmtools_local_workers:latest', 'ports': {5000: 5000}, 'links': {'idmtools_redis': 'redis', 'idmtools_postgres': 'postgres'}, 'volumes': {'/home/clinton/development/work/idmtools/idmtools_platform_local/tests/.local_data/workers': {'bind': '/data', 'mode': 'rw'}, '/var/run/docker.sock': {'bind': '/var/run/docker.sock', 'mode': 'rw'}}, 'runtime': 'runc', 'environment': ['REDIS_URL=redis://redis:6379', 'CURRENT_UID=1000:1000'], 'restart_policy': {'MaximumRetryCount': 15, 'name': 'on-failure'}, 'detach': True, 'labels': {'idmtools_version': '0.1.0+nightly0'}, 'mem_limit': '128m', 'mem_reservation': '64m'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO select version()
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO select current_schema()
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO show standard_conforming_strings
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'name': 'job_status'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'typname': 'status'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO CREATE TYPE status AS ENUM ('created', 'in_progress', 'canceled', 'failed', 'done')
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'typname': 'status'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO 
CREATE TABLE job_status (
	uuid VARCHAR NOT NULL, 
	parent_uuid VARCHAR, 
	status status NOT NULL, 
	data_path VARCHAR NOT NULL, 
	tags JSON, 
	extra_details JSON, 
	created TIMESTAMP WITH TIME ZONE DEFAULT now(), 
	updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (uuid), 
	UNIQUE (uuid)
)


2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 46, 638293), 'updated': None}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'AAAAA'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 46, 733482), 'updated': None}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'BBBBB'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 46, 831586), 'updated': None}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'CCCCC'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 46, 937056), 'updated': None}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'DDDDD'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 21:20:46 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 47, 31190), 'updated': None}
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'EEEEE'}
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 4, 20, 47, 125807), 'updated': None}
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO BEGIN (implicit)
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO {'param_1': 'FFFFF'}
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 21:20:47 sahara sqlalchemy.engine.base.Engine[26785] INFO COMMIT
2019-08-07 21:20:48 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_local.local_cli.LocalCLISpecification'> as Local
2019-08-07 21:20:48 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_comps.comps_cli.COMPSCLISpecification'> as COMPS
2019-08-07 21:20:49 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_local.local_cli.LocalCLISpecification'> as Local
2019-08-07 21:20:49 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_comps.comps_cli.COMPSCLISpecification'> as COMPS
2019-08-07 21:20:49 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_local.local_cli.LocalCLISpecification'> as Local
2019-08-07 21:20:49 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_comps.comps_cli.COMPSCLISpecification'> as COMPS
2019-08-07 21:20:49 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring redis is running
2019-08-07 21:20:49 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_redis
2019-08-07 21:20:50 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_redis
2019-08-07 21:20:50 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring postgres is running
2019-08-07 21:20:50 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_postgres
2019-08-07 21:21:01 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_postgres
2019-08-07 21:21:01 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Ensuring worker is running
2019-08-07 21:21:01 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Stopping container idmtools_workers
2019-08-07 21:21:05 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Removing container idmtools_workers
2019-08-07 21:21:05 sahara idmtools_platform_local.docker.DockerOperations[26785] DEBUG Creating network idmtools
]]>        </system-err>
    </testcase>
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="48"
              name="test_load" time="0.411" timestamp="2019-08-07T21:21:06">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:21:06 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_local.local_cli.LocalCLISpecification'> as Local
2019-08-07 21:21:06 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_comps.comps_cli.COMPSCLISpecification'> as COMPS
]]>        </system-err>
    </testcase>
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="54"
              name="test_status" time="0.435" timestamp="2019-08-07T21:21:06">
        <system-out>
            <![CDATA[<Result SystemExit(-1)>
]]>        </system-out>
        <system-err>
            <![CDATA[2019-08-07 21:21:06 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_local.local_cli.LocalCLISpecification'> as Local
2019-08-07 21:21:06 sahara idmtools.registry.utils[26785] DEBUG Loading <class 'idmtools_platform_comps.comps_cli.COMPSCLISpecification'> as COMPS
]]>        </system-err>
    </testcase>
</testsuite>
