<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="1" file="test_api.py" name="test_api.TestAPI-20190807082558" skipped="0" tests="5"
           time="25.619" timestamp="2019-08-07T08:26:24">
    <testcase classname="test_api.TestAPI" file="test_api.py" line="111" name="test_experiment_filtering" time="24.107"
              timestamp="2019-08-07T08:26:23">
        <system-out>
            <![CDATA[2019-08-07 08:26:06,387 INFO sqlalchemy.engine.base.Engine select version()
2019-08-07 08:26:06,388 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 08:26:06,410 INFO sqlalchemy.engine.base.Engine select current_schema()
2019-08-07 08:26:06,410 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 08:26:06,416 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 08:26:06,417 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 08:26:06,420 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 08:26:06,421 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 08:26:06,422 INFO sqlalchemy.engine.base.Engine show standard_conforming_strings
2019-08-07 08:26:06,423 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 08:26:06,428 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 08:26:06,429 INFO sqlalchemy.engine.base.Engine {'name': 'job_status'}
2019-08-07 08:26:06,435 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 08:26:06,435 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 08:26:06,440 INFO sqlalchemy.engine.base.Engine CREATE TYPE status AS ENUM ('created', 'in_progress', 'canceled', 'failed', 'done')
2019-08-07 08:26:06,441 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 08:26:06,443 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,448 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 08:26:06,449 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 08:26:06,462 INFO sqlalchemy.engine.base.Engine 
CREATE TABLE job_status (
	uuid VARCHAR NOT NULL, 
	parent_uuid VARCHAR, 
	status status NOT NULL, 
	data_path VARCHAR NOT NULL, 
	tags JSON, 
	extra_details JSON, 
	created TIMESTAMP WITH TIME ZONE DEFAULT now(), 
	updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (uuid), 
	UNIQUE (uuid)
)


2019-08-07 08:26:06,463 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 08:26:06,479 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,536 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,543 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 08:26:06,544 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 08:26:06,561 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 08:26:06,562 INFO sqlalchemy.engine.base.Engine {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 7, 15, 26, 6, 559800), 'updated': None}
2019-08-07 08:26:06,565 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,571 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,575 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 08:26:06,576 INFO sqlalchemy.engine.base.Engine {'param_1': 'AAAAA'}
2019-08-07 08:26:06,585 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 08:26:06,586 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 08:26:06,589 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,597 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,603 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 08:26:06,604 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 08:26:06,611 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 08:26:06,612 INFO sqlalchemy.engine.base.Engine {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 7, 15, 26, 6, 610728), 'updated': None}
2019-08-07 08:26:06,615 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,621 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,625 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 08:26:06,626 INFO sqlalchemy.engine.base.Engine {'param_1': 'BBBBB'}
2019-08-07 08:26:06,632 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 08:26:06,633 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 08:26:06,636 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,643 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,648 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 08:26:06,649 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 08:26:06,656 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 08:26:06,656 INFO sqlalchemy.engine.base.Engine {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 7, 15, 26, 6, 655511), 'updated': None}
2019-08-07 08:26:06,660 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,665 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,669 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 08:26:06,670 INFO sqlalchemy.engine.base.Engine {'param_1': 'CCCCC'}
2019-08-07 08:26:06,676 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 08:26:06,676 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 08:26:06,679 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,687 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,692 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 08:26:06,693 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 08:26:06,699 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 08:26:06,700 INFO sqlalchemy.engine.base.Engine {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 7, 15, 26, 6, 699273), 'updated': None}
2019-08-07 08:26:06,703 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,708 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,713 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 08:26:06,713 INFO sqlalchemy.engine.base.Engine {'param_1': 'DDDDD'}
2019-08-07 08:26:06,719 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 08:26:06,720 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 08:26:06,723 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,730 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,735 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 08:26:06,736 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 08:26:06,742 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 08:26:06,743 INFO sqlalchemy.engine.base.Engine {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 7, 15, 26, 6, 742171), 'updated': None}
2019-08-07 08:26:06,746 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,751 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,755 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 08:26:06,756 INFO sqlalchemy.engine.base.Engine {'param_1': 'EEEEE'}
2019-08-07 08:26:06,761 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 08:26:06,762 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 08:26:06,765 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,773 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,778 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 08:26:06,779 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 08:26:06,785 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 08:26:06,786 INFO sqlalchemy.engine.base.Engine {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'created', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 7, 15, 26, 6, 784921), 'updated': None}
2019-08-07 08:26:06,789 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,794 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 08:26:06,799 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 08:26:06,800 INFO sqlalchemy.engine.base.Engine {'param_1': 'FFFFF'}
2019-08-07 08:26:06,806 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 08:26:06,807 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 08:26:06,810 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 08:26:06,840 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 08:26:06,840 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 08:26:06,849 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 08:26:06,850 INFO sqlalchemy.engine.base.Engine {'tags_1': 'a', 'param_1': 'b'}
2019-08-07 08:26:06,935 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 08:26:06,935 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 08:26:06,941 INFO sqlalchemy.engine.base.Engine SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 08:26:06,942 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 08:26:07,313 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 08:26:07,314 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.create ... (21 characters truncated) ...  \nFROM job_status \nWHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> :tags_1) AS VARCHAR) = :param_1 ORDER BY job_status.uuid DESC'}
2019-08-07 08:26:07,322 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid, job_status.parent_uuid, job_status.status, job_status.data_path, job_status.tags, job_status.extra_details, job_status.created, job_status.updated 
FROM job_status 
WHERE job_status.parent_uuid IS NULL AND CAST((job_status.tags ->> %(tags_1)s) AS VARCHAR) = %(param_1)s ORDER BY job_status.uuid DESC
2019-08-07 08:26:07,322 INFO sqlalchemy.engine.base.Engine {'tags_1': 'a', 'param_1': 'c'}
2019-08-07 08:26:07,359 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 08:26:07,359 INFO sqlalchemy.engine.base.Engine {'name': 'SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total \nFROM job_status \nWHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status'}
2019-08-07 08:26:07,365 INFO sqlalchemy.engine.base.Engine SELECT job_status.parent_uuid, job_status.status, count(job_status.status) AS total 
FROM job_status 
WHERE job_status.parent_uuid IS NOT NULL GROUP BY job_status.parent_uuid, job_status.status
2019-08-07 08:26:07,366 INFO sqlalchemy.engine.base.Engine {}

⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
⠹[0m Stopping IDM Tools Local Platform services[K
⠸[0m Stopping IDM Tools Local Platform services[K
⠼[0m Stopping IDM Tools Local Platform services[K
⠴[0m Stopping IDM Tools Local Platform services[K
⠦[0m Stopping IDM Tools Local Platform services[K
⠧[0m Stopping IDM Tools Local Platform services[K
⠇[0m Stopping IDM Tools Local Platform services[K
⠏[0m Stopping IDM Tools Local Platform services[K
⠋[0m Stopping IDM Tools Local Platform services[K
⠙[0m Stopping IDM Tools Local Platform services[K
[K]]>        </system-out>
        <system-err>
            <![CDATA[[2019-08-07 08:26:07,043] ERROR in experiments:   experiment_id    data_path  ...                           updated progress
0         AAAAA  /data/AAAAA  ...  2019-08-07 15:26:06.577038+00:00       []

[1 rows x 7 columns]
[2019-08-07 08:26:07,443] ERROR in experiments: Empty DataFrame
Columns: [experiment_id, data_path, tags, extra_details, created, updated, progress]
Index: []
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="48" name="test_fetch_experiments" time="0.641"
              timestamp="2019-08-07T08:26:23">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[[2019-08-07 08:26:23,378] ERROR in experiments:   experiment_id       data_path  ...              updated          progress
0      TUR68XYR  /data/TUR68XYR  ...  2019-08-07 15:25:58     [{'done': 1}]
1      LRIUGIRJ  /data/LRIUGIRJ  ...  2019-08-07 15:25:58  [{'created': 1}]
2         DDDDD      /data/DDDD  ...  2019-08-07 15:25:59  [{'created': 2}]
3      C1OUCNWR  /data/C1OUCNWR  ...  2019-08-07 15:25:58                []
4         BBBBB     /data/BBBBB  ...  2019-08-07 15:25:59  [{'created': 1}]

[5 rows x 7 columns]
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="67" name="test_fetch_one_experiment_works"
              time="0.446" timestamp="2019-08-07T08:26:24">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[[2019-08-07 08:26:23,931] ERROR in experiments:   experiment_id    data_path  ...              updated progress
0         AAAAA  /data/AAAAA  ...  2019-08-07 15:25:59       []

[1 rows x 7 columns]
]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="100" name="test_fetch_one_simulation_works"
              time="0.208" timestamp="2019-08-07T08:26:24">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
    <testcase classname="test_api.TestAPI" file="test_api.py" line="77" name="test_fetch_simulations" time="0.218"
              timestamp="2019-08-07T08:26:24">
        <failure message="'38CX8B2E' != 'CCCCC'
- 38CX8B2E
+ CCCCC
" type="AssertionError">
            <![CDATA[Traceback (most recent call last):
  File "/home/clinton/development/work/idmtools/idmtools_platform_local/tests/test_api.py", line 88, in test_fetch_simulations
    self.assertEqual(data[0]['simulation_uid'], 'CCCCC')
AssertionError: '38CX8B2E' != 'CCCCC'
- 38CX8B2E
+ CCCCC

]]>        </failure>
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
</testsuite>
