<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" file="test_local_cli_basics.py"
           name="test_local_cli_basics.TestLocalCLIBasic-20190807200617" skipped="0" tests="3" time="39.941"
           timestamp="2019-08-07T20:09:07">
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="58"
              name="test_docker" time="39.881" timestamp="2019-08-07T20:09:07">
        <system-out>
            <![CDATA[
[K2019-08-07 20:08:50,655 INFO sqlalchemy.engine.base.Engine select version()
2019-08-07 20:08:50,656 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:08:50,657 INFO sqlalchemy.engine.base.Engine select current_schema()
2019-08-07 20:08:50,657 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:08:50,659 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2019-08-07 20:08:50,659 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:08:50,660 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2019-08-07 20:08:50,660 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:08:50,661 INFO sqlalchemy.engine.base.Engine show standard_conforming_strings
2019-08-07 20:08:50,661 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:08:50,663 INFO sqlalchemy.engine.base.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2019-08-07 20:08:50,663 INFO sqlalchemy.engine.base.Engine {'name': 'job_status'}
2019-08-07 20:08:50,664 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 20:08:50,665 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 20:08:50,666 INFO sqlalchemy.engine.base.Engine CREATE TYPE status AS ENUM ('created', 'in_progress', 'canceled', 'failed', 'done')
2019-08-07 20:08:50,666 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:08:50,667 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,669 INFO sqlalchemy.engine.base.Engine 
            SELECT EXISTS (
                SELECT * FROM pg_catalog.pg_type t
                WHERE t.typname = %(typname)s
                AND pg_type_is_visible(t.oid)
                )
                
2019-08-07 20:08:50,669 INFO sqlalchemy.engine.base.Engine {'typname': 'status'}
2019-08-07 20:08:50,670 INFO sqlalchemy.engine.base.Engine 
CREATE TABLE job_status (
	uuid VARCHAR NOT NULL, 
	parent_uuid VARCHAR, 
	status status NOT NULL, 
	data_path VARCHAR NOT NULL, 
	tags JSON, 
	extra_details JSON, 
	created TIMESTAMP WITH TIME ZONE DEFAULT now(), 
	updated TIMESTAMP WITH TIME ZONE, 
	PRIMARY KEY (uuid), 
	UNIQUE (uuid)
)


2019-08-07 20:08:50,670 INFO sqlalchemy.engine.base.Engine {}
2019-08-07 20:08:50,683 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,692 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,692 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:08:50,693 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'AAAAA', 'param_1': 1}
2019-08-07 20:08:50,696 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:08:50,696 INFO sqlalchemy.engine.base.Engine {'uuid': 'AAAAA', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 8, 50, 696069), 'updated': None}
2019-08-07 20:08:50,697 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,699 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,699 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:08:50,699 INFO sqlalchemy.engine.base.Engine {'param_1': 'AAAAA'}
2019-08-07 20:08:50,701 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:08:50,702 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/AAAAA', 'tags': '{"a": "b", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'AAAAA'}
2019-08-07 20:08:50,703 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,705 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,705 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:08:50,705 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'BBBBB', 'param_1': 1}
2019-08-07 20:08:50,707 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:08:50,707 INFO sqlalchemy.engine.base.Engine {'uuid': 'BBBBB', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 8, 50, 707368), 'updated': None}
2019-08-07 20:08:50,708 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,709 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,710 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:08:50,710 INFO sqlalchemy.engine.base.Engine {'param_1': 'BBBBB'}
2019-08-07 20:08:50,712 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:08:50,712 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/BBBBB', 'tags': '{"e": "f", "g": "h"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'BBBBB'}
2019-08-07 20:08:50,713 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,714 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,715 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:08:50,715 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'CCCCC', 'param_1': 1}
2019-08-07 20:08:50,717 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:08:50,717 INFO sqlalchemy.engine.base.Engine {'uuid': 'CCCCC', 'parent_uuid': 'BBBBB', 'status': 'created', 'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 8, 50, 717221), 'updated': None}
2019-08-07 20:08:50,718 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,720 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,720 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:08:50,720 INFO sqlalchemy.engine.base.Engine {'param_1': 'CCCCC'}
2019-08-07 20:08:50,722 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:08:50,722 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/CCCCC', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'CCCCC'}
2019-08-07 20:08:50,723 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,725 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,725 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:08:50,725 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'DDDDD', 'param_1': 1}
2019-08-07 20:08:50,727 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:08:50,727 INFO sqlalchemy.engine.base.Engine {'uuid': 'DDDDD', 'parent_uuid': None, 'status': 'created', 'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 8, 50, 727131), 'updated': None}
2019-08-07 20:08:50,727 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,729 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,729 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:08:50,729 INFO sqlalchemy.engine.base.Engine {'param_1': 'DDDDD'}
2019-08-07 20:08:50,730 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:08:50,730 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/DDDD', 'tags': '{"e": "f", "c": "d"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'DDDDD'}
2019-08-07 20:08:50,731 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,732 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,732 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:08:50,732 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'EEEEE', 'param_1': 1}
2019-08-07 20:08:50,733 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:08:50,734 INFO sqlalchemy.engine.base.Engine {'uuid': 'EEEEE', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 8, 50, 733915), 'updated': None}
2019-08-07 20:08:50,735 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,736 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,736 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:08:50,736 INFO sqlalchemy.engine.base.Engine {'param_1': 'EEEEE'}
2019-08-07 20:08:50,737 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:08:50,737 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/EEEEE', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'EEEEE'}
2019-08-07 20:08:50,738 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,740 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,740 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.data_path AS job_status_data_path, job_status.tags AS job_status_tags, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(uuid_1)s 
 LIMIT %(param_1)s
2019-08-07 20:08:50,740 INFO sqlalchemy.engine.base.Engine {'uuid_1': 'FFFFF', 'param_1': 1}
2019-08-07 20:08:50,741 INFO sqlalchemy.engine.base.Engine INSERT INTO job_status (uuid, parent_uuid, status, data_path, tags, extra_details, created, updated) VALUES (%(uuid)s, %(parent_uuid)s, %(status)s, %(data_path)s, %(tags)s, %(extra_details)s, %(created)s, %(updated)s)
2019-08-07 20:08:50,742 INFO sqlalchemy.engine.base.Engine {'uuid': 'FFFFF', 'parent_uuid': 'DDDDD', 'status': 'done', 'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{}', 'created': datetime.datetime(2019, 8, 8, 3, 8, 50, 741866), 'updated': None}
2019-08-07 20:08:50,742 INFO sqlalchemy.engine.base.Engine COMMIT
2019-08-07 20:08:50,744 INFO sqlalchemy.engine.base.Engine BEGIN (implicit)
2019-08-07 20:08:50,744 INFO sqlalchemy.engine.base.Engine SELECT job_status.uuid AS job_status_uuid, job_status.parent_uuid AS job_status_parent_uuid, job_status.status AS job_status_status, job_status.extra_details AS job_status_extra_details, job_status.created AS job_status_created, job_status.updated AS job_status_updated 
FROM job_status 
WHERE job_status.uuid = %(param_1)s
2019-08-07 20:08:50,744 INFO sqlalchemy.engine.base.Engine {'param_1': 'FFFFF'}
2019-08-07 20:08:50,746 INFO sqlalchemy.engine.base.Engine UPDATE job_status SET data_path=%(data_path)s, tags=%(tags)s, extra_details=%(extra_details)s, updated=now() WHERE job_status.uuid = %(job_status_uuid)s
2019-08-07 20:08:50,746 INFO sqlalchemy.engine.base.Engine {'data_path': '/data/FFFFF', 'tags': '{"i": "j", "k": "l"}', 'extra_details': '{"simulation_type": "Python"}', 'job_status_uuid': 'FFFFF'}
2019-08-07 20:08:50,747 INFO sqlalchemy.engine.base.Engine COMMIT

]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="48"
              name="test_load" time="0.033" timestamp="2019-08-07T20:09:07">
        <system-out>
            <![CDATA[]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
    <testcase classname="test_local_cli_basics.TestLocalCLIBasic" file="test_local_cli_basics.py" line="54"
              name="test_status" time="0.028" timestamp="2019-08-07T20:09:07">
        <system-out>
            <![CDATA[<Result SystemExit(-1)>
]]>        </system-out>
        <system-err>
            <![CDATA[]]>        </system-err>
    </testcase>
</testsuite>
