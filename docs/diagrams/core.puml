@startuml

[Analyzers]
package "Experiment/Job orchestration     " as ejo {
    [Assets]
    [Experiment]
    [ExperimentBuilders]
    [Simulation]
    [Tasks]
    [Platform]
    [Suite]
}

package "registry (Plugin infrastructure)     " as registry {
    () "PlatformAPI" as PlatformAPI
    () "TasksAPI" as TasksAPI
}

package "Tasks " as tasks {
  [CommandTask]
  [DockerTask]
}

Analyzers .. Platform: Load Data from Platform
ExperimentBuilders . Experiment: ExperimentBuilders build \nexperiments using \ntemplated simulations
ExperimentBuilders . Simulation : ExperimentBuilders\n uses Simulations from\n TemplatedSimulations
Platform --> PlatformAPI
PlatformAPI .. TasksAPI
[Suite] -down-> Experiment : Suites have Experiments
[Assets] <.> Platform : Load/Create
[Experiment] <.down.> Platform : Load/Create
[Experiment] -down-> Simulation
[Experiment] -right-> [Assets] : Experiment\nAssets
[Simulation] -> Assets: Simulation-level Assets
[Simulation] <.> Platform : Load/Create
[Simulation] -down-> [Tasks] : All Simulation\nhave tasks
[Tasks] -> Assets : Tasks Assets
[Tasks] <---> TasksAPI : Uses API
TasksAPI <-right-- CommandTask : Implements as\na Generic Task
TasksAPI <-down-- DockerTask: Implements Python-based Tasks
@enduml